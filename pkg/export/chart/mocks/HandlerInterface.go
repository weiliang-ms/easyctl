// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	request "github.com/weiliang-ms/easyctl/pkg/util/request"
)

// HandlerInterface is an autogenerated mock type for the HandlerInterface type
type HandlerInterface struct {
	mock.Mock
}

// DoRequest provides a mock function with given fields: httpRequestItem
func (_m *HandlerInterface) DoRequest(httpRequestItem request.HTTPRequestItem) ([]byte, error) {
	ret := _m.Called(httpRequestItem)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(request.HTTPRequestItem) []byte); ok {
		r0 = rf(httpRequestItem)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(request.HTTPRequestItem) error); ok {
		r1 = rf(httpRequestItem)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetChartByte provides a mock function with given fields: httpRequestItem
func (_m *HandlerInterface) GetChartByte(httpRequestItem request.HTTPRequestItem) ([]byte, error) {
	ret := _m.Called(httpRequestItem)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(request.HTTPRequestItem) []byte); ok {
		r0 = rf(httpRequestItem)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(request.HTTPRequestItem) error); ok {
		r1 = rf(httpRequestItem)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetChartList provides a mock function with given fields: httpRequestItem
func (_m *HandlerInterface) GetChartList(httpRequestItem request.HTTPRequestItem) ([]byte, error) {
	ret := _m.Called(httpRequestItem)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(request.HTTPRequestItem) []byte); ok {
		r0 = rf(httpRequestItem)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(request.HTTPRequestItem) error); ok {
		r1 = rf(httpRequestItem)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
