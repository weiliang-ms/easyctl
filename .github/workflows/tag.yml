name: Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create Release # 创建Release，可以在仓库看到一个个版本
        env:
          GITHUB_TOKEN: ${{ secrets.EASYCTL_PUBLISH_TOKEN }}
        id: create_release
        uses: actions/create-release@master
        with:
          tag_name: ${{ github.ref }} # (tag)标签名称
          release_name: Release ${{ github.ref }}
          draft: false # 是否是草稿
          prerelease: false # 是否是预发布
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/amd64
        # goos: [linux, windows, darwin]
        goos: [ linux ]
        goarch: [ "386", amd64 ]
        exclude:
          - goarch: "386"
#            goos: darwin
    steps:
      - uses: actions/checkout@v2
      - run: sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
      - name: get date
        id: current_time
        run: echo "::set-output name=date::$(date +%Y-%m-%d-%H:%M:%S)"
      - name: branch name
        id: branch_name
        run: echo "::set-output name=name::$(git rev-parse --abbrev-ref HEAD)"
      - uses: wangyoucao577/go-release-action@master
        with:
          github_token: ${{ secrets.EASYCTL_PUBLISH_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          build_flags: "-gcflags=-trimpath=$GOPATH -asmflags=-trimpath=$GOPATH"
          ldflags: "-w -s -X 'main.BuildTime=${{ steps.current_time.outputs.date }}' -X 'main.GitTag=${{ steps.branch_name.outputs.name }}'"
          goversion: "1.18"
          project_path: "."
          binary_name: "easyctl"
          #          release_tag: "latest"
          overwrite: true
          extra_files: LICENSE README.md